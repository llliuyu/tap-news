// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
'use strict';
var CodeMirror = require('codemirror');
require('./codemirror-ipython');
require('./codemirror-ipythongfm');
// Bundle other common modes
require('codemirror/mode/javascript/javascript');
require('codemirror/mode/css/css');
require('codemirror/mode/julia/julia');
require('codemirror/mode/r/r');
require('codemirror/mode/markdown/markdown');
/**
 * Load a codemirror mode by file name.
 */
function loadModeByFileName(editor, filename) {
    loadInfo(editor, CodeMirror.findModeByFileName(filename));
}
exports.loadModeByFileName = loadModeByFileName;
/**
 * Load a codemirror mode by mime type.
 */
function loadModeByMIME(editor, mimetype) {
    loadInfo(editor, CodeMirror.findModeByMIME(mimetype));
}
exports.loadModeByMIME = loadModeByMIME;
/**
 * Load a codemirror mode by mode name.
 */
function loadModeByName(editor, mode) {
    loadInfo(editor, CodeMirror.findModeByName(mode));
}
exports.loadModeByName = loadModeByName;
/**
 * Load a CodeMirror mode based on a mode spec.
 */
function loadInfo(editor, info) {
    if (!info) {
        editor.setOption('mode', 'null');
        return;
    }
    if (CodeMirror.modes.hasOwnProperty(info.mode)) {
        editor.setOption('mode', info.mime);
    }
    else {
        require([("codemirror/mode/" + info.mode + "/" + info.mode)], function () {
            editor.setOption('mode', info.mime);
        });
    }
}
