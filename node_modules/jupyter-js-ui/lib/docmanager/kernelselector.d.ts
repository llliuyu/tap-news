import { ISessionId, IKernelId, IKernelSpecIds } from 'jupyter-js-services';
import { IDocumentContext } from './interfaces';
/**
 * An interface for selecting a new kernel.
 */
export interface IKernelSelection {
    /**
     * The name of the current session.
     */
    name: string;
    /**
     * The kernel spec information.
     */
    specs: IKernelSpecIds;
    /**
     * The current running sessions.
     */
    sessions: ISessionId[];
    /**
     * The desired kernel language.
     */
    preferredLanguage: string;
    /**
     * The optional existing kernel id.
     */
    kernel?: IKernelId;
    /**
     * The host node for the dialog.
     */
    host?: HTMLElement;
}
/**
 * Bring up a dialog to select a kernel.
 */
export declare function selectKernel(options: IKernelSelection): Promise<IKernelId>;
/**
 * Change the kernel on a context.
 */
export declare function selectKernelForContext(context: IDocumentContext, host?: HTMLElement): Promise<void>;
/**
 * Get the appropriate kernel name.
 */
export declare function findKernel(kernelName: string, language: string, specs: IKernelSpecIds): string;
/**
 * Populate a kernel dropdown list.
 *
 * @param node - The host html element.
 *
 * @param specs - The available kernel spec information.
 *
 * @param running - The list of running session ids.
 *
 * @param preferredLanguage - The preferred language for the kernel.
 *
 * #### Notes
 * Populates the list with separated sections:
 *   - Kernels matching the preferred language (display names).
 *   - "None" signifying no kernel.
 *   - The remaining kernels.
 *   - Sessions matching the preferred language (file names).
 *   - The remaining sessions.
 * If no preferred language is given or no kernels are found using
 * the preferred language, the default kernel is used in the first
 * section.  Kernels are sorted by display name.  Sessions display the
 * base name of the file with an ellipsis overflow and a tooltip with
 * the explicit session information.
 */
export declare function populateKernels(node: HTMLSelectElement, specs: IKernelSpecIds, running: ISessionId[], preferredLanguage?: string): void;
