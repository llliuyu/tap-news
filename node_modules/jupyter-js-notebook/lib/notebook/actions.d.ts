import { IKernel } from 'jupyter-js-services';
import { MimeData as IClipboard } from 'phosphor-dragdrop';
import { ActiveNotebook } from './widget';
/**
 * A namespace for handling actions on a notebook.
 */
export declare namespace NotebookActions {
    /**
     * Split the active cell into two cells.
     */
    function splitCell(widget: ActiveNotebook): void;
    /**
     * Merge selected cells.
     */
    function mergeCells(widget: ActiveNotebook): void;
    /**
     * Delete the selected cells.
     */
    function deleteCells(widget: ActiveNotebook): void;
    /**
     * Insert a new code cell above the current cell.
     */
    function insertAbove(widget: ActiveNotebook): void;
    /**
     * Insert a node code cell below the current cell.
     */
    function insertBelow(widget: ActiveNotebook): void;
    /**
     * Change the selected cell type(s).
     */
    function changeCellType(widget: ActiveNotebook, value: string): void;
    /**
     * Run the selected cell(s).
     */
    function run(widget: ActiveNotebook, kernel?: IKernel): void;
    /**
     * Run the selected cell(s) and advance to the next cell.
     *
     * #### Notes
     * If the last cell is run, a new code cell will be created in
     * edit mode and selected.
     */
    function runAndAdvance(widget: ActiveNotebook, kernel?: IKernel): void;
    /**
     * Run the selected cell(s) and insert a new code cell below in edit mode.
     */
    function runAndInsert(widget: ActiveNotebook, kernel?: IKernel): void;
    /**
     * Run all of the cells in the notebook.
     */
    function runAll(widget: ActiveNotebook, kernel?: IKernel): void;
    /**
     * Select the cell below the active cell.
     */
    function selectBelow(widget: ActiveNotebook): void;
    /**
     * Select the above the active cell.
     */
    function selectAbove(widget: ActiveNotebook): void;
    /**
     * Extend the selection to the cell above.
     */
    function extendSelectionAbove(widget: ActiveNotebook): void;
    /**
     * Extend the selection to the cell below.
     */
    function extendSelectionBelow(widget: ActiveNotebook): void;
    /**
     * Copy the selected cells to a clipboard.
     */
    function copy(widget: ActiveNotebook, clipboard: IClipboard): void;
    /**
     * Cut the selected cells to a clipboard.
     */
    function cut(widget: ActiveNotebook, clipboard: IClipboard): void;
    /**
     * Paste cells from a clipboard.
     */
    function paste(widget: ActiveNotebook, clipboard: IClipboard): void;
    /**
     * Undo a cell action.
     */
    function undo(widget: ActiveNotebook): void;
    /**
     * Redo a cell action.
     */
    function redo(widget: ActiveNotebook): void;
    /**
     * Toggle line numbers on the selected cell(s).
     */
    function toggleLineNumbers(widget: ActiveNotebook): void;
    /**
     * Toggle the line number of all cells.
     */
    function toggleAllLineNumbers(widget: ActiveNotebook): void;
    /**
     * Clear the outputs of the currently selected cells.
     */
    function clearOutputs(widget: ActiveNotebook): void;
    /**
     * Clear the code outputs on the widget.
     */
    function clearAllOutputs(widget: ActiveNotebook): void;
}
