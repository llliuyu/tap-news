// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
'use strict';
/**
 * Check if an IKernelMessage is an iopub stream message.
 */
function isStreamMessage(msg) {
    return msg.header.msg_type === 'stream';
}
exports.isStreamMessage = isStreamMessage;
/**
 * Check if an IKernelMessage is an iopub display_data message.
 */
function isDisplayDataMessage(msg) {
    return msg.header.msg_type === 'display_data';
}
exports.isDisplayDataMessage = isDisplayDataMessage;
/**
 * Check if an IKernelMessage is an iopub execute_input message.
 */
function isExecuteInputMessage(msg) {
    return msg.header.msg_type === 'execute_input';
}
exports.isExecuteInputMessage = isExecuteInputMessage;
/**
 * Check if an IKernelMessage is an iopub execute_result message.
 */
function isExecuteResultMessage(msg) {
    return msg.header.msg_type === 'execute_result';
}
exports.isExecuteResultMessage = isExecuteResultMessage;
/**
 * Check if an IKernelMessage is an iopub error message.
 */
function isErrorMessage(msg) {
    return msg.header.msg_type === 'error';
}
exports.isErrorMessage = isErrorMessage;
/**
 * Check if an IKernelMessage is an iopub status message.
 */
function isStatusMessage(msg) {
    return msg.header.msg_type === 'status';
}
exports.isStatusMessage = isStatusMessage;
/**
 * Check if an IKernelMessage is an iopub clear_output message.
 */
function isClearOutputMessage(msg) {
    return msg.header.msg_type === 'clear_output';
}
exports.isClearOutputMessage = isClearOutputMessage;
/**
 * Check if an IKernelMessage is an iopub comm_open message.
 */
function isCommOpenMessage(msg) {
    return msg.header.msg_type === 'comm_open';
}
exports.isCommOpenMessage = isCommOpenMessage;
/**
 * Enumeration of valid Kernel status states.
 */
(function (KernelStatus) {
    KernelStatus[KernelStatus["Unknown"] = 0] = "Unknown";
    KernelStatus[KernelStatus["Starting"] = 1] = "Starting";
    KernelStatus[KernelStatus["Reconnecting"] = 2] = "Reconnecting";
    KernelStatus[KernelStatus["Idle"] = 3] = "Idle";
    KernelStatus[KernelStatus["Busy"] = 4] = "Busy";
    KernelStatus[KernelStatus["Restarting"] = 5] = "Restarting";
    KernelStatus[KernelStatus["Dead"] = 6] = "Dead";
})(exports.KernelStatus || (exports.KernelStatus = {}));
var KernelStatus = exports.KernelStatus;
