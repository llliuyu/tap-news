import { Panel } from 'phosphor-panel';
import { ChildMessage, Widget } from 'phosphor-widget';
import { BoxLayout, Direction } from './layout';
/**
 * A panel which arranges its children in a single row or column.
 *
 * #### Notes
 * This class provides a convenience wrapper around a [[BoxLayout]].
 */
export declare class BoxPanel extends Panel {
    /**
     * Create a box layout for a box panel.
     */
    static createLayout(): BoxLayout;
    /**
     * Construct a new box panel.
     */
    constructor();
    /**
     * Get the layout direction for the box panel.
     */
    /**
     * Set the layout direction for the box panel.
     */
    direction: Direction;
    /**
     * Get the inter-element spacing for the box panel.
     */
    /**
     * Set the inter-element spacing for the box panel.
     */
    spacing: number;
    /**
     * A message handler invoked on a `'child-added'` message.
     */
    protected onChildAdded(msg: ChildMessage): void;
    /**
     * A message handler invoked on a `'child-removed'` message.
     */
    protected onChildRemoved(msg: ChildMessage): void;
}
/**
 * The namespace for the `BoxPanel` class statics.
 */
export declare namespace BoxPanel {
    /**
     * A convenience alias of the `LeftToRight` [[Direction]].
     */
    const LeftToRight: Direction;
    /**
     * A convenience alias of the `RightToLeft` [[Direction]].
     */
    const RightToLeft: Direction;
    /**
     * A convenience alias of the `TopToBottom` [[Direction]].
     */
    const TopToBottom: Direction;
    /**
     * A convenience alias of the `BottomToTop` [[Direction]].
     */
    const BottomToTop: Direction;
    /**
     * Get the box panel stretch factor for the given widget.
     *
     * @param widget - The widget of interest.
     *
     * @returns The box panel stretch factor for the widget.
     */
    function getStretch(widget: Widget): number;
    /**
     * Set the box panel stretch factor for the given widget.
     *
     * @param widget - The widget of interest.
     *
     * @param value - The value for the stretch factor.
     */
    function setStretch(widget: Widget, value: number): void;
    /**
     * Get the box panel size basis for the given widget.
     *
     * @param widget - The widget of interest.
     *
     * @returns The box panel size basis for the widget.
     */
    function getSizeBasis(widget: Widget): number;
    /**
     * Set the box panel size basis for the given widget.
     *
     * @param widget - The widget of interest.
     *
     * @param value - The value for the size basis.
     */
    function setSizeBasis(widget: Widget, value: number): void;
}
